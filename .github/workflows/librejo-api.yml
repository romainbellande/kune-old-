name: Librejo API CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
    - 'packages/librejo-api/**'


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]
        package: [librejo-api]

    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install, lint, and test
        run: |
          yarn --pure-lockfile
          npx lerna bootstrap --scope ${{ matrix.package }}
          npx lerna exec --scope ${{ matrix.package }} -- yarn lint
          npx lerna exec --scope ${{ matrix.package }} -- yarn test:cov

      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v1
      - name: Run sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
              -Dsonar.host.url=https://sonarcloud.io/
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}
              -Dsonar.projectBaseDir=./packages/${{ matrix.package }}
